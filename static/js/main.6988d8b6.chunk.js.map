{"version":3,"sources":["assets/weather/unknown.svg","helpers/getCurrentDate.js","assets/weather/chancerain.svg","assets/weather/chancetstorms.svg","assets/weather/clear.svg","assets/weather/cloudy.svg","assets/weather/flurries.svg","assets/weather/fog.svg","assets/weather/mostlycloudy.svg","assets/weather/partlysunny.svg","assets/weather/rain.svg","assets/weather/snow.svg","helpers/imagePicker.js","redux/actions/weather.js","components/Forecast/Forecast.jsx","components/SearchBar/SearchBar.jsx","components/Home/Home.jsx","App.js","redux/reducers/weather.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["arrayOfWeekdays","months","getCurrentDate","newDate","Date","weekday","getDay","weekdayName","date","getDate","month","getMonth","monthName","year","getFullYear","imagePicker","condition","alt","src","thunderStorms","style","width","unknown","rain","freezingRain","alert","flurries","snow","atmosphere","clear","fewClouds","cloudy","mostlyCloudy","Types","fetchWeather","city","dispatch","axios","get","then","data","type","payload","fetchForecast","forecast","list","Forecast","className","map","item","dt_txt","slice","weather","id","description","Math","round","main","temp","dt","SearchBar","currentCity","search","useDispatch","placeholder","value","onChange","e","target","onKeyPress","Home","letter","useSelector","key","preventDefault","name","sys","country","toUpperCase","wind","speed","humidity","temp_max","App","produce","draft","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6988d8b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/unknown.f69bb01d.svg\";","const arrayOfWeekdays = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n];\r\n\r\nconst months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nexport const getCurrentDate = () => {\r\n  let newDate = new Date();\r\n  let weekday = newDate.getDay();\r\n  let weekdayName = arrayOfWeekdays[weekday];\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth();\r\n  let monthName = months[month];\r\n  let year = newDate.getFullYear();\r\n\r\n  return `${weekdayName} ${date} ${monthName} ${year}`;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/chancerain.35f31a8e.svg\";","export default __webpack_public_path__ + \"static/media/chancetstorms.83714d4e.svg\";","export default __webpack_public_path__ + \"static/media/clear.322c6cac.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.c2af3ac8.svg\";","export default __webpack_public_path__ + \"static/media/flurries.d08b35a9.svg\";","export default __webpack_public_path__ + \"static/media/fog.916e135b.svg\";","export default __webpack_public_path__ + \"static/media/mostlycloudy.f9d38b75.svg\";","export default __webpack_public_path__ + \"static/media/partlysunny.62bd566c.svg\";","export default __webpack_public_path__ + \"static/media/rain.0b9d593c.svg\";","export default __webpack_public_path__ + \"static/media/snow.34a1b4b0.svg\";","import freezingRain from '../assets/weather/chancerain.svg';\r\nimport thunderStorms from '../assets/weather/chancetstorms.svg';\r\nimport clear from '../assets/weather/clear.svg';\r\nimport cloudy from '../assets/weather/cloudy.svg';\r\nimport flurries from '../assets/weather/flurries.svg';\r\nimport atmosphere from '../assets/weather/fog.svg';\r\nimport mostlyCloudy from '../assets/weather/mostlycloudy.svg';\r\nimport fewClouds from '../assets/weather/partlysunny.svg';\r\nimport rain from '../assets/weather/rain.svg';\r\nimport snow from '../assets/weather/snow.svg';\r\nimport unknown from '../assets/weather/unknown.svg';\r\n\r\nexport const imagePicker = (condition, alt) => {\r\n  switch (condition) {\r\n    case 200:\r\n    case 201:\r\n    case 202:\r\n    case 210:\r\n    case 211:\r\n    case 212:\r\n    case 221:\r\n    case 230:\r\n    case 231:\r\n    case 232:\r\n      return <img src={thunderStorms} alt={alt} style={{ width: 180 }} />;\r\n    case 300:\r\n    case 301:\r\n    case 302:\r\n    case 310:\r\n    case 311:\r\n    case 312:\r\n    case 313:\r\n    case 314:\r\n    case 321:\r\n      return <img src={unknown} alt={alt} style={{ width: 180 }} />;\r\n    case 500:\r\n    case 501:\r\n    case 502:\r\n    case 503:\r\n    case 504:\r\n      return <img src={rain} alt={alt} style={{ width: 180 }} />;\r\n    case 511:\r\n      return <img src={freezingRain} alt={alert} style={{ width: 180 }} />;\r\n    case 520:\r\n    case 521:\r\n    case 522:\r\n    case 531:\r\n      return <img src={flurries} alt={alt} style={{ width: 180 }} />;\r\n    case 600:\r\n    case 601:\r\n    case 602:\r\n    case 611:\r\n    case 612:\r\n    case 613:\r\n    case 615:\r\n    case 616:\r\n    case 620:\r\n    case 621:\r\n    case 622:\r\n      return <img src={snow} alt={alt} style={{ width: 180 }} />;\r\n    case 701:\r\n    case 711:\r\n    case 721:\r\n    case 731:\r\n    case 741:\r\n    case 751:\r\n    case 761:\r\n    case 762:\r\n    case 771:\r\n    case 781:\r\n      return <img src={atmosphere} alt={alt} style={{ width: 180 }} />;\r\n    case 800:\r\n      return <img src={clear} alt={alt} style={{ width: 180 }} />;\r\n    case 801:\r\n      return <img src={fewClouds} alt={alt} style={{ width: 180 }} />;\r\n    case 802:\r\n      return <img src={cloudy} alt={alt} style={{ width: 180 }} />;\r\n    case 803:\r\n    case 804:\r\n      return <img src={mostlyCloudy} alt={alt} style={{ width: 180 }} />;\r\n    default:\r\n      return <img src={unknown} alt={alt} style={{ width: 180 }} />;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const Types = {\r\n  SET_WEATHER: 'WEATHER@SET_WEATHER',\r\n  SET_CURRENT_CITY: 'WEATHER@SET_CURRENT_CITY',\r\n  SET_CLEAR: 'WEATHER@SET_CLEAR',\r\n  SET_FORECAST: 'WEATHER@SET_FORECAST',\r\n};\r\n\r\nexport const setWeather = weather => ({\r\n  type: Types.SET_WEATHER,\r\n  payload: weather,\r\n});\r\n\r\nexport const setCurrentCity = city => ({\r\n  type: Types.SET_CURRENT_CITY,\r\n  payload: city,\r\n});\r\n\r\nexport const setClear = () => ({\r\n  type: Types.SET_CLEAR,\r\n});\r\n\r\nexport const setForecast = forecast => ({\r\n  type: Types.SET_FORECAST,\r\n  payload: forecast,\r\n});\r\n\r\nexport const fetchWeather = city => dispatch => {\r\n  axios\r\n    .get(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=a20e93adc63a3af0b3e33257540e1382`,\r\n    )\r\n    .then(({ data }) => dispatch(setWeather(data)));\r\n};\r\n\r\nexport const fetchForecast = city => dispatch => {\r\n  axios\r\n    .get(\r\n      `http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=a20e93adc63a3af0b3e33257540e1382`,\r\n    )\r\n    .then(({ data }) => dispatch(setForecast(data.list)));\r\n};\r\n","import React from 'react';\r\nimport { imagePicker } from '../../helpers/imagePicker';\r\nimport './index.scss';\r\n\r\nconst Forecast = ({ forecast }) => {\r\n  return (\r\n    <div className=\"forecast\">\r\n      {forecast &&\r\n        forecast.map(item => (\r\n          <div className=\"wrapper\" key={item.dt}>\r\n            <div className=\"forecast__day\">{item.dt_txt.slice(5, 16)}</div>\r\n            <div className=\"forecast__img\">\r\n              {imagePicker(item.weather[0].id, item.weather[0].description)}\r\n            </div>\r\n            <div className=\"forecast__temp\">\r\n              {Math.round(item.main.temp)} <span>°</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentCity } from '../../redux/actions/weather';\r\nimport './index.scss';\r\n\r\nconst SearchBar = ({ currentCity, search }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onCityChange = e => {\r\n    dispatch(setCurrentCity(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"City name\"\r\n        value={currentCity}\r\n        onChange={onCityChange}\r\n        onKeyPress={search}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport unknown from '../../assets/weather/unknown.svg';\nimport { getCurrentDate } from '../../helpers/getCurrentDate';\nimport { imagePicker } from '../../helpers/imagePicker';\nimport { fetchForecast, fetchWeather, setClear } from '../../redux/actions/weather';\nimport Forecast from '../Forecast/Forecast';\nimport SearchBar from '../SearchBar/SearchBar';\nimport './index.scss';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const weather = useSelector(({ weather }) => weather.weather);\n  const city = useSelector(({ weather }) => weather.currentCity);\n  const forecast = useSelector(({ weather }) => weather.forecast);\n\n  const search = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      dispatch(fetchWeather(city));\n      dispatch(fetchForecast(city));\n      dispatch(setClear());\n    }\n  };\n\n  const upper = letter => {\n    return letter[0].toUpperCase() + letter.slice(1);\n  };\n\n  return (\n    <div className=\"weather\">\n      <div className=\"container\">\n        <div className=\"searchbar\">\n          <SearchBar currentCity={city} search={search} />\n        </div>\n        <div className=\"content\">\n          {weather.main ? (\n            <div key={weather.id}>\n              <div className=\"content__city\">\n                {weather.name}, {weather.sys.country}\n              </div>\n              <div className=\"content__date\">{getCurrentDate()}</div>\n              <div className=\"content__img\">\n                {imagePicker(weather.weather[0].id, weather.weather[0].description)}\n              </div>\n              <div className=\"content__temp\">\n                {Math.round(weather.main.temp)}\n                <span>°</span>\n                <div>{upper(weather.weather[0].description)}</div>\n              </div>\n              <div className=\"content__additional\">\n                <div className=\"content__wind\">\n                  {weather.wind.speed}\n                  km/h\n                  <p>Wind</p>\n                </div>\n                <div className=\"content__humidity\">\n                  {weather.main.humidity}%<p>Humidity</p>\n                </div>\n                <div className=\"content__tempmax\">\n                  {Math.round(weather.main.temp_max)} <span>°</span>\n                  <p>Maximum</p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"content__noinfo\">\n              <img src={unknown} alt=\"unknown weather\" style={{ width: 180 }} />\n              <p>No information given</p>\n            </div>\n          )}\n        </div>\n      </div>\n      <Forecast forecast={forecast} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { produce } from 'immer';\r\nimport { Types } from '../actions/weather';\r\n\r\nconst initialState = {\r\n  weather: {},\r\n  currentCity: '',\r\n  forecast: [],\r\n};\r\n\r\nconst weather = produce((draft, action) => {\r\n  switch (action.type) {\r\n    case Types.SET_WEATHER:\r\n      draft.weather = action.payload;\r\n      break;\r\n    case Types.SET_CURRENT_CITY:\r\n      draft.currentCity = action.payload;\r\n      break;\r\n    case Types.SET_CLEAR:\r\n      draft.currentCity = '';\r\n      break;\r\n    case Types.SET_FORECAST:\r\n      draft.forecast = action.payload;\r\n      break;\r\n    default:\r\n  }\r\n}, initialState);\r\n\r\nexport default weather;\r\n","import { combineReducers } from 'redux';\r\nimport weather from './weather';\r\n\r\nconst rootReducer = combineReducers({\r\n  weather,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './index.scss';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}